version: '3'

services:
  order-db:
    container_name: order-db
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    networks:
      - orchestrator-saga
    environment:
      MONGO_INITDB_ROOT_USERNAME: "admin"
      MONGO_INITDB_ROOT_PASSWORD: "admin"

  product-db:
    container_name: product-db
    image: postgres:latest
    ports:
      - "5432:5432"
    networks:
      - orchestrator-saga
    environment:
      POSTGRES_DB: "product-db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  payment-db:
    container_name: payment-db
    image: postgres:latest
    ports:
      - "5433:5432"
    networks:
      - orchestrator-saga
    environment:
      POSTGRES_DB: "payment-db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  inventory-db:
    container_name: inventory-db
    image: postgres:latest
    ports:
      - "5434:5432"
    networks:
      - orchestrator-saga
    environment:
      POSTGRES_DB: "inventory-db"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"

  kafka:
    container_name: kafka
    image: obsidiandynamics/kafka
    restart: "no"
    ports:
      - "2181:2181"
      - "9092:9092"
    networks:
      - orchestrator-saga
    environment:
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ADVERTISED_LISTENERS: "INTERNAL://kafka:29092,EXTERNAL://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: "INTERNAL"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    volumes:
      - ./data/kafka/data:/var/lib/kafka/data

  redpanda-console:
    container_name: redpanda
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - "8081:8080"
    networks:
      - orchestrator-saga
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["kafka:29092"]
    depends_on:
      - "kafka"

  order-service:
    container_name: order-service
    build: "./order-service"
    depends_on:
      - kafka
      - order-db
    environment:
      KAFKA_BROKER: kafka:29092
      MONGO_DB_URI: mongodb://admin:admin@order-db:27017
    networks:
      - orchestrator-saga
    ports:
      - "3000:3000"

  orchestrator-service:
    container_name: orchestrator-service
    build: "./orchestrator-service"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:29092
    networks:
      - orchestrator-saga
    ports:
      - "8080:8080"

  product-validation-service:
    container_name: product-validation-service
    build: "./product-validation-service"
    depends_on:
      - kafka
      - product-db
    environment:
      KAFKA_BROKER: kafka:29092
      DB_HOST: product-db
      DB_PORT: 5432
      DB_NAME: product-db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    networks:
      - orchestrator-saga
    ports:
      - "8090:8090"

  payment-service:
    container_name: payment-service
    build: "./payment-service"
    depends_on:
      - kafka
      - payment-db
    environment:
      KAFKA_BROKER: kafka:29092
      DB_HOST: payment-db
      DB_PORT: 5432
      DB_NAME: payment-db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    networks:
      - orchestrator-saga
    ports:
      - "8091:8091"

  inventory-service:
    container_name: inventory-service
    build: "./inventory-service"
    depends_on:
      - kafka
      - inventory-db
    environment:
      KAFKA_BROKER: kafka:29092
      DB_HOST: inventory-db
      DB_PORT: 5432
      DB_NAME: inventory-db
      DB_USERNAME: postgres
      DB_PASSWORD: postgres
    networks:
      - orchestrator-saga
    ports:
      - "8092:8092"

networks:
  orchestrator-saga:
    driver: bridge